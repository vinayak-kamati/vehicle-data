1. tar : By combining multiple files and their information into a single file, you may improve the storage and mobility of your data.

# Creating an archive using tar command

    a. tar cvf archive_name.tar dirname/             ---->  does not provide any compression.
    b. tar cvzf archive_name.tar.gz dirname/         ---->  To use a gzip compression on the tar archive
    c. tar cvfj archive_name.tar.bz2 dirname/        ---->  Archival size is less

           c – create a new archive
           v – verbosely list files which are processed.
           f – following is the archive file name
           z – filter the archive through gzip
           j – filter the archive through bzip2

    * gzip vs bzip2: bzip2 takes more time to compress and decompress than gzip. bzip2 archival size is less than gzip.

# Extracting (untar) an archive using tar command

    a. tar xvf archive_name.tar
    b. tar xvfz archive_name.tar.gz
    c. tar xvfj archive_name.tar.bz2

# Listing an archive using tar command

    a. tar tvf archive_name.tar
    b. tar tvfz archive_name.tar.gz
    c. tar tvfj archive_name.tar.bz2

2. grep : Search for the given string in file

    a. Search for the given string in a single file
       grep "literal_string" demo_filename

    b. Checking for the given string in multiple files.
       grep "this" demo_*

    c. Case insensitive search using grep -i
       grep -i "string" filename

    d. Print the matched line, along with the 3 lines after it.
       grep -A 3 -i "example" filename

    e. When you want to search in all the files under the current directory and its sub directory. -r option is the one which you need to use.
       grep -r "ramesh" *

3. Find files

    a. Find files using file-name ( case in-sensitve find)
       find -iname "MyCProgram.c"

    b. Find all empty files in home directory
       find ~ -empty

4. ssh command
    SSH or Secure Shell is a network communication protocol that enables two computers to communicate
    (c.f http or hypertext transfer protocol, which is the protocol used to transfer hypertext such as web pages) and share data.

    a. Display ssh client version
       ssh -V

    b. Login to remote host
        ssh -l jsmith remotehost.example.com

    c. Debug ssh client
        ssh -v -l jsmith remotehost.example.com

5. Sort a file in ascending order

    a. Sort a file in ascending order
       sort names.txt

    b. Sort a file in descending order
       sort -r names.txt

6. export command

    a. To view oracle related environment variables.
       export | grep ORACLE

    b. To export an environment variable:
       export ORACLE_HOME=/u01/app/oracle/product/10.2.0

7. ls command

    a. Order Files Based on Last Modified Time (In Reverse Order) Using ls -ltr
       ls -ltr

    ls -t sorts the file by modification time, showing the last edited file first. head -1 picks up this first file.

    b. Open Last Edited File Using ls -t
       vi `ls -t | head -1`

    c. Display One File Per Line Using ls -1
       ls -1

    d. Display Hidden Files Using ls -a (or) ls -A
       ls -a

8. pwd command

    pwd is Print current working directory.

9. cd command

    Use “cd -” to toggle between the last two directories

    cd .. - previous dir

    cd dirname

10. gzip command - reduces file size

    a. To create a *.gz compressed file:
        gzip test.txt

    b. To uncompress a *.gz file:
        gzip -d test.txt.gz

    c. Display compression ratio of the compressed file using gzip -l
        gzip -l *.gz

11. bzip2 command - reduce file size lesser than gzip

    a. To create a *.bz2 compressed file:
       bzip2 test.txt

    b. To uncompress a *.bz2 file:
        bzip2 -d test.txt.bz2

12. unzip command

     a. To extract a *.zip compressed file:
        unzip test.zip

     b. View the contents of *.zip file (Without unzipping it)
        unzip -l test.zip

13. shutdown command

    a. Shutdown the system and turn the power off immediately.
        shutdown -h now

    b. Shutdown the system after 10 minutes.
        shutdown -h +10

    c. Reboot the system using shutdown command.
        shutdown -r now

    d. Force the filesystem check during reboot.
        shutdown -Fr now

14. ps command

    a. To view current running processes.
        ps -ef | more

    b. To view current running processes in a tree structure. H option stands for process hierarchy.
        ps -efH | more

15. free command

    a. This command is used to display the free, used, swap memory available in the system.
        free

    b. If you want to quickly check how many GB of RAM your system has use the -g option. -b option displays in bytes, -k in kilo bytes, -m in mega bytes.
        free -g

    c. If you want to see a total memory ( including the swap), use the -t switch, which will display a total line as shown below.
        free -g -t

16. kill command

    a. Use kill command to terminate a process. First get the process id using ps -ef command, then use kill -9 to kill the running Linux process.
       ps -ef | grep vim
       ramesh    7243  7222  9 22:43 pts/2    00:00:00 vim

       kill -9 7243

    b. Killall Command – Kill processes by name
       killall -9 firefox

    c. Pkill Command  ---> You can send signal to any process by specifying the full name or partial name.
                           So there is no need for you to find out the PID of the process to send the signal.
       pgrep -l sample
       pkill -USR1 sample

    d. Xkill Command  ----> xkill is the simplest way to kill a malfunctioning program.
       xkill

17. rm command

    a. Get confirmation before removing the file. It is very useful while giving shell metacharacters in the file name argument.
       rm -i filename.txt

    b. Print the filename and get confirmation before removing the file.
       rm -i file*

    c. Recursively removes all files and directories under the example directory. This also removes the example directory itself.
       rm -r example

18. cp command

    a. Copy file1 to file2 preserving the mode, ownership and timestamp.
       cp -p file1 file2

    b. Copy file1 to file2. if file2 exists prompt for confirmation before overwriting it.
       cp -i file1 file2

19. mv command

    a. Rename file1 to file2. if file2 exists prompt for confirmation before overwriting it.
       mv -i file1 file2

    Note: mv -f is just the opposite, which will overwrite file2 without prompting.

    b. mv -v will print what is happening during file rename, which is useful while specifying shell metacharacters in the file name argument.
       mv -v file1 file2

20. cat command examples

    a. You can view multiple files at the same time. Following example prints the content of file1 followed by file2 to stdout.
       cat file1 file2

    b. While displaying the file, following cat -n command will prepend the line number to each line of the output.
       cat -n file1
            1	/var/log/btmp {
            2	    missingok
            3	    monthly
            4	    create 0660 root utmp
            5	    rotate 1
            6	}

21. mount command

    mount command is used to mount the filesystem found on a device to big tree structure(Linux filesystem) rooted at ‘/‘.
    Conversely, another command umount can be used to detach these devices from the Tree.

       mkdir /u01
       mount /dev/sdb1 /u01

22. chmod command

    chmod command is used to change the permissions for a file or directory.

    a. Give full access to user and group (i.e read, write and execute ) on a specific file.
        chmod ug+rwx file.txt

    b. Revoke all access for the group (i.e read, write and execute ) on a specific file.
        chmod g-rwx file.txt

    c. Apply the file permissions recursively to all the files in the sub-directories.
        chmod -R ug+rwx file.txt

    d. The command chmod -R 777 / makes every single file on the system under / (root) have rwxrwxrwx permissions.
        chmod 777: Everything for everyone.

    e. chmod 755: Only owner can write, read and execute for everyone.

23. chown command

    chown command is used to change the owner and group of a file. \

    a. To change owner to oracle and group to db on a file. i.e Change both owner and group at the same time.
        chown oracle:dba dbora.sh

    b. Use -R to change the ownership recursively.
        chown -R oracle:dba /home/oracle

24. passwd command

    a. Change your password from command line using passwd. This will prompt for the old password followed by the new password.
        passwd

    b. Super user can use passwd command to reset others password. This will not prompt for current password of the user.
        passwd USERNAME

    c. Remove password for a specific user. Root user can disable password for a specific user. Once the password is disabled, the user can login without entering the password.
        passwd -d USERNAME

25. mkdir command

    a. create a directory called temp under your home directory.
       mkdir ~/temp

    b. Create nested directories using one mkdir command. If any of these directories exist already, it will not display any error.
       If any of these directories doesn’t exist, it will create them.

       mkdir -p dir1/dir2/dir3/dir4/
26. whatis command

    Whatis command displays a single line description about a command.
        whatis ls

27. locate command

    Using locate command you can quickly search for the location of a specific file (or group of files).
    Locate command uses the database created by updatedb.
        locate crontab

28. tail command examples

    a. Print the last 10 lines of a file by default.
        tail filename.txt

    b. Print N number of lines from the file named filename.txt
        tail -n N filename.txt

    c. View the content of the file in real time using tail -f. This is useful to view the log files, that keeps growing. The command can be terminated using CTRL-C.
        tail -f log-file

29. rpm command

    a. To install apache using rpm.
        rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm

    b. To upgrade apache using rpm.
        rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm

    c. To uninstall/remove apache using rpm.
        rpm -ev httpd

30. commands
    pwd          ----> print working directory
    hostname     ----> my computer's network name
    mkdir        ----> make directory
    cd           ----> change directory
    ls           ----> list directory
    rmdir        ----> remove directory
    pushd        ----> push directory
    popd         ----> pop directory
    cp           ----> copy a file or directory
    mv           ----> move a file or directory
    less         ----> page through a file
    cat          ----> print the whole file
    xargs        ----> execute arguments
    find         ----> find files
    grep         ----> find things inside files
    man          ----> read a manual page
    apropos      ----> find what man page is appropriate
    env          ----> look at your environment
    echo         ----> print some arguments
    export       ----> export/set a new environment variable
    exit         ----> exit the shell
    sudo         ----> DANGER! become super user root DANGER!

